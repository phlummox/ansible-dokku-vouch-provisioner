name: vagrant-test

on: ["push"]

jobs:
  vagrant-test:
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2

    - name: Cache vagrant boxes
      uses: actions/cache@v2
      with:
        path: ~/.vagrant.d/boxes
        key: ${{ runner.os }}-vagrant-${{ hashFiles('ansible-roles/Makefile') }}
        restore-keys: |
          ${{ runner.os }}-vagrant-

    - name: Cache pip download dir
      uses: actions/cache@v2
      with:
        path: |
          ~/Library/Caches/pip
        key: ${{ runner.os }}-python-${{ hashFiles('install-ansible/requirements.in') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Cache python libs
      uses: actions/cache@v2
      with:
        path: |
          ~/.local
        key: ${{ runner.os }}-python-${{ hashFiles('install-ansible/requirements.in') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        # architecture: 'x64' # Defaults to x64

    - name: Show tool versions
      run: |
        set -euo pipefail
        set -x
        vagrant --version
        python --version
        python3 --version
        pip --version
        vboxmanage --version
        brew --version

    - name: create ssh keys
      run: |
        set -x
        set -euo pipefail
        ssh -V
        ssh-keygen -f ~/.ssh/id_rsa -P ""
        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
        ls -al ~/.ssh
        : "show id"
        id
        : "existing sshd config"
        sudo grep -n ^ /dev/null /etc/ssh/sshd_config
        : "configure ssh"
        cat > sshd_config <<EOF
        PermitRootLogin yes
        AuthorizedKeysFile  .ssh/authorized_keys
        PasswordAuthentication yes
        ChallengeResponseAuthentication no
        UsePAM yes
        UseDNS no
        X11Forwarding no
        PrintMotd no
        EOF
        sudo mv -f sshd_config /etc/ssh/sshd_config
        sudo launchctl unload /System/Library/LaunchDaemons/ssh.plist
        sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist
        ssh_opts="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        ssh -vvvv $ssh_opts localhost ls / || true
        sudo ls -al /var/log || true
        sudo cat /var/log/system.log | grep -i -E 'auth|ssh' || true
        sudo grep ssh /var/log/secure.log || true
        false

    - name: Run tests
      # force colors for molecule and ansible, even
      # though not tty
      env:
        PY_COLORS: '1'
        ANSIBLE_FORCE_COLOR: '1'
      run: |
        set -x
        export PATH=~/.local/bin:$PATH
        brew install gnu-time
        export PATH="$(brew --prefix)/opt/gnu-time/libexec/gnubin:$PATH"
        ls -al ~/.local/lib/python*/site-packages/ || true
        set -euo pipefail
        curr_dir=$PWD
        cd ansible-roles
        make run_tests_vbx
        cd $curr_dir

        # ansible-lint all files
        ./lint-the-files.sh
        # also do plain yamllint
        yamllint -c .yamllint $(find `ls | grep -v install-ansible` -name '*.yml' -o -name '*.yaml')

        set +e
        ls -al ~/.local/lib/python*/site-packages/ || true

# vim: ts=2 sw=2 et :
